// <auto-generated />
#pragma warning disable 1591
namespace WcfService
{
    using System.ServiceModel;

    using Contract;
    using Contract.Queries.Orders;

    using WcfService.CompositionRoot;

    [ServiceContract(Namespace = "http://www.cuttingedge.it/solid/queryservice/v1.0")]
    [ServiceKnownType("GetKnownTypes")]
    public class NonDotNetQueryService
    {
        [OperationContract]
        public Contract.DTOs.OrderInfo ExecuteGetOrderByIdQuery(GetOrderByIdQuery query)
        {
            return Execute<GetOrderByIdQuery, Contract.DTOs.OrderInfo>(query);
        }
        
        [OperationContract]
        public Contract.DTOs.OrderInfo[] ExecuteGetUnshippedOrdersForCurrentCustomerQuery(GetUnshippedOrdersForCurrentCustomerQuery query)
        {
            return Execute<GetUnshippedOrdersForCurrentCustomerQuery, Contract.DTOs.OrderInfo[]>(query);
        }
        

		private static TResult Execute<TQuery, TResult>(TQuery query) where TQuery : IQuery<TResult>
		{
			var handler = Bootstrapper.GetInstance<IQueryHandler<TQuery, TResult>>();
			return handler.Handle(query);
		}
	}
}
